#include <iostream>
using namespace std;

/*
    3명의 사람이 일직선 직선에 있다.
    세 사람이 서있는 위치가 주어지면, 양 끝에 있는 사람을 선택해서 두 사람 사이로 이동시켜서 서있는 위치가 연속된 숫자가 되도록 하려고 한다.

    최소 이동 횟수 및 최대 이동 횟수를 구해보자.

    최소 이동을 하려면, 무조건 최대 2번이면 가능하다.

    최대 이동은? 
    4와 7의 간격이 3
    7과 8의 간격이 2
    한번 이동시에 간격이 1씩 줄어들 수 있으므로, 총 2회이다.
*/

int main() {
    int a, b, c;
    cin >> a >> b >> c;
    // 최소 이동 횟수는 2회 이하이다.
    // 일단, 이미 정렬되어있다면 0회이다.
    if (b - a == 1 && c - b == 1) cout << 0 << endl;
    // 둘 중에 하나라도 1간격만 가지고 있다면, 1회에 끝난다.
    else if (b - a < 3 || c - b < 3) cout << 1 << endl;
    // 그렇지 않다면 2회
    else cout << 2 << endl;

    // 최대이동횟수는, 둘중 큰 값을 봐야 한다
    int max = b - a > c - b ? b - a : c - b;

    // 그리고, 그 값 -1이 최대 이동 횟수이다
    cout << max - 1 << endl;
    return 0;
}